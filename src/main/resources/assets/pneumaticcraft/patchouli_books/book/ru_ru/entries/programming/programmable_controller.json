{
    "name": "Программируемый Контроллер",
    "icon": "pneumaticcraft:programmable_controller",
    "category": "pneumaticcraft:programming",
    "advancement": "pneumaticcraft:programmer",
    "pages": [{
            "type": "text",
            "text": "Программируемый контроллер может делать очень похожие вещи на те, что делают $(l:tools/drone)дроны/$. Программа может быть написана в $(l:programming/programmer)программаторе/$ и сохранена либо в $(item)дрон/$, либо в $(l:components/network_components#network_api)Сетевой API/$. Затем любой из этих предметов можно поместить в $(item)программируемый контроллер/$. При условии, что есть достаточно $(l:base_concepts/pressure)давления/$, $(item)программируемый контроллер/$ выполнит программу так же, как если бы она была загружена на $(item)дрон/$."
        },
        {
            "type": "text",
            "text": "Однако есть несколько отличий:$(li)$(item)Программируемый контроллер/$ использует миниатюрную версию $(item)дрона/$ - $(thing)минидрона/$. Это не настоящее существо, поэтому нет необходимости в поиске пути, и $(thing)минидрон/$ может перемещаться сквозь стены. Это позволяет сделать процесс более дружественным для сервера и более надежным в общем.$(li)При выполнении программы $(item)программируемый контроллер/$ использует воздух с расходом 10 мл/тик (в то время как у дронов расход составляет только 1 мл/тик)."
        },
        {
            "type": "text",
            "text": "$(li)$(item)Программируемый контроллер/$ не может выполнять следующие виджеты: Компьютер, Атака на сущность, Условие дрона: Сущность, Экспорт сущности, Импорт сущности, Телепортация, Ожидание, Самоуничтожение.$(p)$(item)Программируемый контроллер/$, как правило, наилучшим образом подходит для более крупных задач, таких как разработка больших областей или строительство крупных структур."
        },
        {
            "type": "text",
            "title": "Интерфейс Предметов/Жидкостей",
            "text": "Любые предметы или жидкости, которые собирает $(thing)минидрон/$, можно использовать через стороны блока $(item)программируемого контроллера/$.$(p)По умолчанию 'дрон' имеет один слот инвентаря и бак на 16000 мл. Размер инвентаря можно увеличить, добавив $(l:base_concepts/upgrades#inventory)улучшения инвентаря/$ (максимум 35), что также увеличит размер бака на 1000 мл за каждое улучшение."
        },
        {
            "type": "text",
            "title": "Интерфейс (продолжение)",
            "text": "По умолчанию верхние и боковые грани $(item)программируемого контроллера/$ можно использовать для взаимодействия с предметами, и нижняя грань может использоваться для вставки или извлечения программируемых предметов, но это можно настроить при необходимости через вкладку $(bold)Side Configuration/$ в GUI."
        },
        {
            "type": "text",
            "title": "Зарядка Предметов",
            "text": "Программируемый контроллер способен $(thing)заряжать/$ предмет, удерживаемый $(thing)минидроном/$, т.е. предмет в слоте 0 инвентаря дрона. Это включает как давлением заряжаемые предметы, например $(l:tools/jackhammer)джекхэммер/$, так и предметы, использующие $(thing)Forge Energy/$. Для этого используется воздух и/или FE из собственных буферов программного контроллера. Зарядка отключена по умолчанию; включите ее через вкладку $(thing)Held Item Charging/$ в GUI контроллера."
        },
        {
            "type": "crafting",
            "text": "Крафт Программируемого Контроллера",
            "recipe": "pneumaticcraft:programmable_controller"
        }
    ]
}